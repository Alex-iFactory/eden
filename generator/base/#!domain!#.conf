upstream #!name!#_upstream {
  ip_hash;
  server 127.0.0.1:#!port!#;

  keepalive 64;
}

server {
  # http
  listen 80;
  listen [::]:80;

  # https
  #listen 443 ssl http2;
  #listen [::]:443 ssl http2;

  # server
  server_name #!domain!#;

  # include ssl conf
  #include /etc/nginx/ssl.conf;

  # LetsEncrypt
  # ssl_certificate         /etc/letsencrypt/live/edenup.com-0001/fullchain.pem;
  # ssl_certificate_key     /etc/letsencrypt/live/edenup.com-0001/privkey.pem;
  # ssl_trusted_certificate /etc/letsencrypt/live/edenup.com-0001/chain.pem;

  # auto index
  autoindex on;

  root  #!global.appRoot!#/www;
  index index.html;

  # cache feeds
  location ~* \.(?:rss|atom)$ {
    expires 1h;

    # add cache header
    add_header Cache-Control "public";
  }

  # cache media
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|ttf|woff|woff2)$ {
    expires   1M;
    directio  8m;
    gzip_vary on;

    # add cache header
    add_header Cache-Control "public";
  }

  # cache CSS and JavaScript
  location ~* \.(?:css|js)$ {
    expires 1M;
    directio     4m;
    add_header Cache-Control "public";
  }

  # create proxied location
  location @nodejs {
    proxy_redirect off;

    proxy_cache_key    sfs$request_uri$scheme;
    proxy_set_header   X-Real-IP      $remote_addr;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  $scheme;
    proxy_set_header   Host         $http_host;
    proxy_set_header   X-NginX-Proxy    true;
    proxy_set_header   Connection "";
    proxy_http_version 1.1;

    # pass proxy
    proxy_pass  http://#!name!#_upstream;
  }

  # create proxied location for socketio
  location /socket.io/ {
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "upgrade";
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   Host $host;
    proxy_http_version 1.1;

    # pass proxy
    proxy_pass http://#!name!#_upstream;
  }

  # try files
  location / {
    try_files $uri @nodejs;
  }
}