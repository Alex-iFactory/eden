#
# A virtual host using mix of IP-, name-, and port-based configuration
#

upstream torrent_upstream_dev {
    ip_hash;

    server 127.0.0.1:13371;
}

upstream torrent_upstream {
    ip_hash;

    server localhost:13371 max_fails=10 fail_timeout=60s;
    server localhost:13372 max_fails=10 fail_timeout=60s;
    server localhost:13373 max_fails=10 fail_timeout=60s;
    server localhost:13374 max_fails=10 fail_timeout=60s;
    server localhost:13375 max_fails=10 fail_timeout=60s;
}

server {
    listen 443 ssl http2;
    server_name torsearch.se;

    ssl on;

    # LetsEncrypt
    ssl_certificate /etc/letsencrypt/live/torsearch.se/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/torsearch.se/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_dhparam /etc/nginx/dhparam.pem;
    ssl_buffer_size 4k;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    ssl_stapling on;
    ssl_stapling_verify on;

    #charset koi8-r;
    access_log  off;
    client_max_body_size       10m;
    client_body_buffer_size    128k;
    autoindex on;

    root   /var/www/www;
    index index.html;

    # cache.appcache, your document html and data
    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
        expires -1;
        # access_log logs/static.log; # I don't usually include a static log
    }

    # Feed
    location ~* \.(?:rss|atom)$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        gzip_vary      on;
        directio       8m;
        aio            on;
        add_header Cache-Control "public";
    }

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
        expires 1M;
        gzip_vary      on;
        directio       8m;
        aio            on;
        access_log off;
        add_header Cache-Control "public";
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }

    # create proxied location
    location @nodejs {
        proxy_redirect off;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;
        proxy_set_header   Host                 $http_host;
        proxy_set_header   X-NginX-Proxy        true;
        proxy_set_header   Connection "";
        proxy_http_version 1.1;
        proxy_cache_key    sfs$request_uri$scheme;

        # proxy pass
        proxy_pass         http://torrent_upstream;
    }

    location /socket.io/ {
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   Host $host;
        proxy_http_version 1.1;

        # proxy pass
        proxy_pass http://torrent_upstream;
    }

    # try files
    location / {
        try_files $uri @nodejs;
    }
}

#server {
#    listen 80;
#    server_name  torsearch.se;

#    rewrite     ^(.*)   https://torsearch.se$1 permanent;
#}
