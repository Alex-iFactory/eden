# upstream
upstream rentlar_upstream {
  server 127.0.0.1:3201;

  keepalive 64;
}

# upstream live
upstream rentlar_upstream_live {
  ip_hash;

  server 127.0.0.1:3201;
  server 127.0.0.1:3202;
  server 127.0.0.1:3203;
  server 127.0.0.1:3204;
  server 127.0.0.1:3205;
  server 127.0.0.1:3206;
  server 127.0.0.1:3207;
  server 127.0.0.1:3208;
  server 127.0.0.1:3209;
  server 127.0.0.1:3210;

  keepalive 64;
}

# server configuration
server {
  # http
  #listen 80;

  # https
  listen 443 ssl http2;

  # server
  server_name rentlar.com rentlar.com.au rentlar.co.nz;

  ssl on;

  # LetsEncrypt
  ssl_certificate         /etc/letsencrypt/live/rentlar.com/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/rentlar.com/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/rentlar.com/chain.pem;

  # add default proxy configuration
  ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
  ssl_dhparam               /etc/nginx/ssl/dhparam.pem; # generate with "sudo openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048"
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache         shared:SSL:10m;
  ssl_session_timeout       5m;
  ssl_prefer_server_ciphers on;

  # add proxy headers
  add_header   Strict-Transport-Security "max-age=31536000; includeSubdomains";

  # add ssl stapling
  ssl_stapling on;

  # auto index
  autoindex on;

  root  /var/www/r/rentlar/www;
  index index.html;

  # cache resuorces
  location ~* \.(?:manifest|appcache|html?|xml|json)$ {
    expires -1;
  }

  # cache feeds
  location ~* \.(?:rss|atom)$ {
    expires 1h;

    # add cache header
    add_header Cache-Control "public";
  }

  # cache media
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    aio       on;
    expires   1M;
    directio  8m;
    gzip_vary on;

    # add cache header
    add_header Cache-Control "public";
  }

  # cache CSS and JavaScript
  location ~* \.(?:css|js)$ {
    expires 1M;
    directio     4m;
    aio      on;
    add_header Cache-Control "public";
  }

  # deny access to htaccess
  location ~ /\.ht {
    deny  all;
  }

  # create proxied location
  location @nodejs {
    proxy_redirect off;

    proxy_cache_key    sfs$request_uri$scheme;
    proxy_set_header   X-Real-IP      $remote_addr;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  $scheme;
    proxy_set_header   Host         $http_host;
    proxy_set_header   X-NginX-Proxy    true;
    proxy_set_header   Connection "";
    proxy_http_version 1.1;

    # pass proxy
    proxy_pass  http://rentlar_upstream;
  }

  # create proxied location for socketio
  location /socket.io/ {
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "upgrade";
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   Host $host;
    proxy_http_version 1.1;

    # pass proxy
    proxy_pass http://rentlar_upstream;
  }

  # try files
  location / {
    try_files $uri @nodejs;
  }
}

# redirection from http
server {
  listen 80;
  server_name www.rentlar.com rentlar.com;

  rewrite   ^(.*)   https://rentlar.com$1 permanent;
}
server {
  listen 80;
  server_name www.rentlar.com.au rentlar.com.au;

  rewrite   ^(.*)   https://rentlar.com.au$1 permanent;
}
server {
  listen 80;
  server_name www.rentlar.co.nz rentlar.co.nz;

  rewrite   ^(.*)   https://rentlar.co.nz$1 permanent;
}
